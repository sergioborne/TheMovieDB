package com.sergioborne.themoviedb.mainlist.presenterimport com.sergioborne.themoviedb.Rimport com.sergioborne.themoviedb.common.OutcomeListenerimport com.sergioborne.themoviedb.mainlist.gateway.MainListGatewayimport com.sergioborne.themoviedb.mainlist.ui.MainListViewimport com.sergioborne.themoviedb.mainlist.ui.MovieViewModelimport com.sergioborne.tmdbkotlinchallenge.data.Movieclass MainListPresenterImpl(  private val mainListView: MainListView,  private val gateway: MainListGateway) : MainListPresenter {  override fun init() {    mainListView.showLoadingIndicator()    updateList()  }  private fun updateList() {    gateway.loadMovies(object : OutcomeListener<List<Movie>> {      override fun success(projectList: List<Movie>) {        mainListView.hideLoadingIndicator()      }      override fun error(error: Throwable) {        mainListView.showError(R.string.default_error_message)        mainListView.hideLoadingIndicator()      }    })  }}